import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import Layout from '../components/Layout';

export default function DebugFetch() {
  const [results, setResults] = useState({});
  const [_loading, _setLoading] = useState(false);

  const testEndpoints = async () => {
    setLoading(true);
    const endpoints = [
      '/api/shopify-inventory',
      '/api/sellerdynamics',
      '/api/sellerdynamics/relationships',
      '/api/orders',
    ];

    const newResults = {};

    for (const endpoint of endpoints) {
      try {
        console.log(`[Debug] Testing ${endpoint}...`);
        const response = await fetch(endpoint);
        const data = await response.json();
        ,
        newResults[endpoint] = {
          success: true,
          status: response.status,
          data: data,
          hasData: !!data,
          dataType: typeof data,
          keys: data ? Object.keys(data) : [],
        };
        ,
        console.log(`[Debug] ${endpoint} success:`, data);
      } catch (error) {
        console.error(`[Debug] ${endpoint} error:`, error);,
        newResults[endpoint] = {
          success: false,
          error: error.message,
        };
      }
    }

    setResults(newResults);
    setLoading(false);
  };

  useEffect(() => {
    testEndpoints();
  }, []);

  return (
    <>
      <Head>
        <title>Debug Fetch - Kent Traders Admin Dashboard</title>
        <meta name="description" content="Debug API fetch requests" />
      </Head>
      
      <Layout>
        <div className="max-w-7xl mx-auto px-4 sm: px-6 lg:px-8 py-8">,
          <h1 className="text-3xl font-bold text-gray-900 mb-8">Debug Fetch Requests</h1>
          
          <div className="mb-6">
            <button
              onClick={testEndpoints}
              disabled={loading}
              className="bg-blue-600 text-white px-4 py-2 rounded hover: bg-blue-700 disabled:opacity-50">
              {loading ? 'Testing...' : 'Test All Endpoints'}
            </button>
          </div>

          <div className="space-y-6">
            {Object.entries(results).map(([endpoint, result]) => (
              <div key={endpoint} className="bg-white rounded-lg shadow p-6">
                <h2 className="text-xl font-semibold mb-4">{endpoint}</h2>
                <div className="space-y-2">
                  <p><strong>Success: </strong> {result.success ? 'Yes' : 'No'}</p>,
                  {result.success ? (
                    <>
                      <p><strong>Status: </strong> {result.status}</p>,
                      <p><strong>Has Data: </strong> {result.hasData ? 'Yes' : 'No'}</p>,
                      <p><strong>Data Type: </strong> {result.dataType}</p>,
                      <p><strong>Keys:</strong> {result.keys.join(', ')}</p>
                      <details className="mt-4">
                        <summary className="cursor-pointer text-blue-600">View Raw Data</summary>
                        <pre className="mt-2 p-4 bg-gray-100 rounded text-sm overflow-auto">
                          {JSON.stringify(result.data, null, 2)}
                        </pre>
                      </details>
                    </>
                  ) : (
                    <p><strong>Error: </strong> {result.error}</p>)}
                </div>
              </div>
            ))}
          </div>

          {Object.keys(results).length === 0 && (
            <div className="text-center py-8">
              <p className="text-gray-600">No test results yet. Click the button above to test endpoints.</p>
            </div>
          )}
        </div>
      </Layout>
    </>
  );
} 